{"version":3,"file":"useAsync.stories-b834a469.js","sources":["../../packages/useAsync/src/useAsync.ts"],"sourcesContent":["import { DependencyList, useRef, useEffect } from 'react'\nimport {\n  AsyncState$Loading,\n  AsyncState$Error,\n  AsyncState$Success,\n} from './types'\nimport { useAsyncFn } from './useAsyncFn'\n\nexport function useAsync<Result = any, Args extends any[] = any[]>(\n  fn: (...args: Args | []) => Promise<Result>,\n  deps: DependencyList = [],\n  initialState?: useAsync.State<Result>,\n): [useAsync.State<Result>, useAsync.AsyncFn<Result, Args | []>] {\n  const isFirstTimeRef = useRef(true)\n  const isJustMountedRef = useRef(true)\n\n  if (isFirstTimeRef.current) {\n    isFirstTimeRef.current = false\n\n    if (!initialState) {\n      initialState = {\n        loading: true,\n        promise: fn(),\n      }\n    }\n  }\n\n  const res = useAsyncFn(fn, deps, initialState) as [\n    useAsync.State<Result>,\n    useAsync.AsyncFn<Result, Args | []>,\n  ]\n\n  const [, reRun] = res\n\n  useEffect(\n    () => {\n      // Skip `reRun` when component is just mounted, because we have already\n      // executed `fn` before\n      if (isJustMountedRef.current) {\n        isJustMountedRef.current = false\n      } else {\n        void reRun()\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...deps, reRun],\n  )\n\n  return res\n}\n\nexport namespace useAsync {\n  export type State<T> =\n    | AsyncState$Loading<T>\n    | AsyncState$Success<T>\n    | AsyncState$Error<T>\n\n  export type AsyncFn<\n    Result = any,\n    Args extends any[] = any[],\n  > = useAsyncFn.AsyncFn<Result, Args>\n}\n"],"names":["useAsync","fn","deps","initialState","isFirstTimeRef","useRef","isJustMountedRef","res","useAsyncFn","reRun","useEffect"],"mappings":"wLAQO,SAASA,EACdC,EACAC,EAAuB,CAAA,EACvBC,EAC+D,CACzD,MAAAC,EAAiBC,SAAO,EAAI,EAC5BC,EAAmBD,SAAO,EAAI,EAEhCD,EAAe,UACjBA,EAAe,QAAU,GAEpBD,IACYA,EAAA,CACb,QAAS,GACT,QAASF,EAAG,CAAA,IAKlB,MAAMM,EAAMC,EAAWP,EAAIC,EAAMC,CAAY,EAKvC,CAAG,CAAAM,CAAK,EAAIF,EAElBG,OAAAA,EAAA,UACE,IAAM,CAGAJ,EAAiB,QACnBA,EAAiB,QAAU,GAEtBG,EAAM,CAEf,EAEA,CAAC,GAAGP,EAAMO,CAAK,CAAA,EAGVF,CACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}