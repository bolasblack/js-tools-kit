import{a as h,F as g,j as i}from"./jsx-runtime-91a467a5.js";import{r as d}from"./index-8db94870.js";import{P as v}from"./Portal-a992abbf.js";let r=null;const s=class s extends d.PureComponent{constructor(){super(...arguments),this.state={popoverTop:0,popoverLeft:0,triggerContainer:null,contentContainer:null},this.triggerContainerRef=e=>{this.setState({triggerContainer:e})},this.contentContainerRef=e=>{this.setState({contentContainer:e})},this.clickClose=e=>{if(!this.state.triggerContainer||!this.state.contentContainer||!(e.target instanceof HTMLElement)&&!(e.target instanceof SVGElement))return;if(this.props.closeOn==="click")return!0;const t=this.state.triggerContainer.contains(e.target)||this.state.contentContainer.contains(e.target);if(this.props.closeOn==="clickInside")return t;if(this.props.closeOn==="clickOutside")return!t},this.changeVisible=(e,t)=>{e===!1&&(t==null?void 0:t.event)instanceof MouseEvent&&t.event.type==="click"&&!this.clickClose(t.event)||(e=this.props.disabled?!1:e,this.visible!==e&&this.props.onVisibleChange(e,t))},this.onTriggerClick=e=>{this.props.disabled||this.props.openOn==="click"&&document.scrollingElement&&this.state.triggerContainer&&(this.setState(this.getPositionInfo(this.state.triggerContainer,document.scrollingElement)),this.changeVisible(!0,{event:e.nativeEvent}))},this.onMouseEnter=e=>{this.props.disabled||this.props.openOn==="hover"&&document.scrollingElement&&this.state.triggerContainer&&(this.setState(this.getPositionInfo(this.state.triggerContainer,document.scrollingElement)),this.changeVisible(!0,{event:e.nativeEvent}))},this.onMouseLeave=e=>{this.props.disabled||this.props.closeOn==="hover"&&this.changeVisible(!1,{event:e.nativeEvent})}}static get popoverContainer(){return r}render(){return h(g,{children:[i("div",{ref:this.triggerContainerRef,className:`Popover__trigger ${this.props.triggerClassName}`,onClick:this.onTriggerClick,onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave,children:this.props.trigger()}),i(v,{className:`Popover__container ${this.props.popoverClassName}`,style:this.popoverStyle(),parent:this.getPopoverParent(),visible:this.visible,onVisibleChange:this.changeVisible,children:i("div",{ref:this.contentContainerRef,className:"Popover__content",onMouseEnter:this.onMouseEnter,onMouseLeave:this.onMouseLeave,children:this.visible?this.props.content():null})})]})}getPopoverParent(){return this.props.inline?null:(r||(r=document.createElement("div"),document.body.appendChild(r)),r)}popoverStyle(){if(!this.props.disabled&&document.scrollingElement&&this.state.triggerContainer)return this.props.popoverStyle({visible:this.visible,...this.getPositionInfo(this.state.triggerContainer,document.scrollingElement)})}get visible(){return this.props.disabled?!1:!!this.props.visible}getPositionInfo(e,t){const a=e.getBoundingClientRect();return{popoverTop:t.scrollTop+a.bottom,popoverLeft:t.scrollLeft+a.left+a.width/2}}};s.displayName="Popover",s.defaultProps={triggerClassName:"",popoverClassName:"",openOn:"hover",closeOn:"hover",disabled:!1,inline:!1,onVisibleChange:()=>{},popoverStyle:e=>({position:"absolute",top:`${e.popoverTop}px`,left:`${e.popoverLeft}px`,display:"block",visibility:e.visible?"visible":"hidden",transform:"translateX(-50%)"})};let n=s;try{n.displayName="Popover",n.__docgenInfo={description:"By default, the visible state hosted by Popover.\n\nIf supplied `visible` prop, Popover will follow the\n[State Up](https://reactjs.org/docs/lifting-state-up.html) pattern, and when\nneed change visible state, will call `onVisibleChange(expectedVisibleState)`",displayName:"Popover",props:{trigger:{defaultValue:null,description:"Trigger element renderer",name:"trigger",required:!0,type:{name:"() => ReactNode"}},content:{defaultValue:null,description:"Popover content renderer",name:"content",required:!0,type:{name:"() => ReactNode"}},triggerClassName:{defaultValue:{value:""},description:"Trigger container element class",name:"triggerClassName",required:!1,type:{name:"string"}},popoverClassName:{defaultValue:{value:""},description:"Popover container element class",name:"popoverClassName",required:!1,type:{name:"string"}},popoverStyle:{defaultValue:{value:`(info: PopoverVisibleInfo): PopoverStyle => ({
      position: 'absolute',
      top: \`\${info.popoverTop}px\`,
      left: \`\${info.popoverLeft}px\`,
      display: 'block',
      visibility: info.visible ? 'visible' : 'hidden',
      transform: 'translateX(-50%)',
    })`},description:"Generate popover container inline styles",name:"popoverStyle",required:!1,type:{name:"(info: PopoverVisibleInfo) => PopoverStyle"}},openOn:{defaultValue:{value:"'hover' as const"},description:"Popover open cause",name:"openOn",required:!1,type:{name:"enum",value:[{value:'"hover"'},{value:'"click"'}]}},closeOn:{defaultValue:{value:"'hover' as const"},description:"Popover close cause",name:"closeOn",required:!1,type:{name:"enum",value:[{value:'"hover"'},{value:'"click"'},{value:'"clickInside"'},{value:'"clickOutside"'}]}},visible:{defaultValue:null,description:"Popover visiblity",name:"visible",required:!1,type:{name:"boolean"}},onVisibleChange:{defaultValue:{value:"() => {}"},description:"Callback when popover visiblity needs to be changed",name:"onVisibleChange",required:!1,type:{name:"(visible: boolean, reason: PopoverVisibleChangeReason) => void"}},disabled:{defaultValue:{value:"false"},description:"If set to true, popover won't be shown, popoverStyle, content, onVisibleChange won't be called",name:"disabled",required:!1,type:{name:"boolean"}},inline:{defaultValue:{value:"false"},description:"Set to true to render content inline",name:"inline",required:!1,type:{name:"boolean"}}}}}catch{}const f={title:"Components/Popover",component:n},o=()=>{const[l,e]=d.useState(!1);return i(n,{visible:l,onVisibleChange:e,trigger:()=>i("p",{style:{background:"#ddd"},children:"Trigger"}),content:()=>i("p",{style:{position:"relative",margin:0,width:"300px",height:"100px",background:"#eaeaea"},children:"Content"})})};var p,c,u;o.parameters={...o.parameters,docs:{...(p=o.parameters)==null?void 0:p.docs,source:{originalSource:`() => {
  const [visible, setVisible] = useState(false);
  return <Popover visible={visible} onVisibleChange={setVisible} trigger={() => <p style={{
    background: '#ddd'
  }}>Trigger</p>} content={() => <p style={{
    position: 'relative',
    margin: 0,
    width: '300px',
    height: '100px',
    background: '#eaeaea'
  }}>
          Content
        </p>} />;
}`,...(u=(c=o.parameters)==null?void 0:c.docs)==null?void 0:u.source}}};const m=["BasicUsage"],P=Object.freeze(Object.defineProperty({__proto__:null,BasicUsage:o,__namedExportsOrder:m,default:f},Symbol.toStringTag,{value:"Module"}));export{o as B,P};
//# sourceMappingURL=Popover.stories-580e8bc1.js.map
