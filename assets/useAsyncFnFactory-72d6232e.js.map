{"version":3,"file":"useAsyncFnFactory-72d6232e.js","sources":["../../packages/useAsync/src/useAsyncFnFactory.ts"],"sourcesContent":["import {\n  DependencyList,\n  useCallback,\n  useRef,\n  useState,\n  useDebugValue,\n  useMemo,\n} from 'react'\nimport { AsyncState } from './types'\n\nexport function useAsyncFnFactory<Result = any, Args extends any[] = any[]>(\n  fnFactory: () => (...args: Args) => Promise<Result>,\n  deps: DependencyList = [],\n  initialState: useAsyncFnFactory.State<Result> = { loading: false },\n): useAsyncFnFactory.Controller<Result, Args> {\n  const stateRef = useRef(initialState)\n  const [, rerenderComponent] = useState(Date.now())\n\n  const handlePromiseCallId = useRef(0)\n  const handlePromise = useCallback(\n    async (promise: Promise<Result>): Promise<AsyncState.Settled<Result>> => {\n      while (true) {\n        const callId = (handlePromiseCallId.current += 1)\n\n        const newState = await handlePromiseImpl(promise)\n\n        const isStillTheLastBeCall = callId === handlePromiseCallId.current\n        if (isStillTheLastBeCall) {\n          stateRef.current = newState\n          rerenderComponent(Date.now())\n          return newState\n        }\n\n        // this can make use always return the result for the last call\n        promise =\n          // state should never be `Idle` after useAsyncFnFactory has ever been called\n          (\n            stateRef.current as Exclude<\n              useAsyncFnFactory.State<Result>,\n              AsyncState.Idle\n            >\n          ).promise\n      }\n\n      async function handlePromiseImpl(\n        promise: Promise<Result>,\n      ): Promise<AsyncState.Settled<Result>> {\n        let newState: useAsyncFnFactory.State<Result>\n        try {\n          const value = await promise\n          newState = { value, loading: false, promise }\n        } catch (error) {\n          newState = { error, loading: false, promise }\n        }\n        return newState\n      }\n    },\n    [],\n  )\n\n  const fn = useMemo(\n    () => fnFactory(),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps,\n  )\n\n  const reRun = useCallback(\n    async (...args: Args) => {\n      const promise = fn(...args)\n\n      stateRef.current = { loading: true, promise }\n      rerenderComponent(Date.now())\n\n      return handlePromise(promise)\n    },\n    [fn, handlePromise],\n  )\n\n  const isFirstTimeRef = useRef(true)\n  if (isFirstTimeRef.current) {\n    isFirstTimeRef.current = false\n    if (stateRef.current.loading && stateRef.current.promise) {\n      void handlePromise(stateRef.current.promise)\n    }\n  }\n\n  const res: useAsyncFnFactory.Controller<Result, Args> = [\n    stateRef.current,\n    reRun,\n  ]\n\n  useDebugValue(res)\n\n  return res\n}\n\nexport namespace useAsyncFnFactory {\n  export type State<T> =\n    | AsyncState.Idle\n    | AsyncState.Loading<T>\n    | AsyncState.Success<T>\n    | AsyncState.Failed<T>\n\n  export type AsyncFn<Result = any, Args extends any[] = any[]> = (\n    ...args: Args\n  ) => Promise<Result>\n\n  export type Controller<Result = any, Args extends any[] = any[]> = [\n    State<Result>,\n    AsyncFn<AsyncState.Settled<Result>, Args>,\n  ]\n}\n"],"names":["useAsyncFnFactory","fnFactory","deps","initialState","stateRef","useRef","rerenderComponent","useState","handlePromiseCallId","handlePromise","useCallback","promise","callId","newState","handlePromiseImpl","error","fn","useMemo","reRun","args","isFirstTimeRef","res","useDebugValue"],"mappings":"wCAUgB,SAAAA,EACdC,EACAC,EAAuB,CAAA,EACvBC,EAAgD,CAAE,QAAS,IACf,CACtC,MAAAC,EAAWC,SAAOF,CAAY,EAC9B,CAAA,CAAGG,CAAiB,EAAIC,EAAAA,SAAS,KAAK,IAAK,CAAA,EAE3CC,EAAsBH,SAAO,CAAC,EAC9BI,EAAgBC,EAAA,YACpB,MAAOC,GAAkE,CACvE,OAAa,CACL,MAAAC,EAAUJ,EAAoB,SAAW,EAEzCK,EAAW,MAAMC,EAAkBH,CAAO,EAGhD,GAD6BC,IAAWJ,EAAoB,QAE1D,OAAAJ,EAAS,QAAUS,EACDP,EAAA,KAAK,KAAK,EACrBO,EAITF,EAGIP,EAAS,QAIT,OACN,CAEA,eAAeU,EACbH,EACqC,CACjC,IAAAE,EACA,GAAA,CAEFA,EAAW,CAAE,MADC,MAAMF,EACA,QAAS,GAAO,QAAAA,SAC7BI,EAAO,CACdF,EAAW,CAAE,MAAAE,EAAO,QAAS,GAAO,QAAAJ,EACtC,CACO,OAAAE,CACT,CACF,EACA,CAAC,CAAA,EAGGG,EAAKC,EAAA,QACT,IAAMhB,EAAU,EAEhBC,CAAA,EAGIgB,EAAQR,EAAA,YACZ,SAAUS,IAAe,CACjB,MAAAR,EAAUK,EAAG,GAAGG,CAAI,EAE1B,OAAAf,EAAS,QAAU,CAAE,QAAS,GAAM,QAAAO,CAAQ,EAC1BL,EAAA,KAAK,KAAK,EAErBG,EAAcE,CAAO,CAC9B,EACA,CAACK,EAAIP,CAAa,CAAA,EAGdW,EAAiBf,SAAO,EAAI,EAC9Be,EAAe,UACjBA,EAAe,QAAU,GACrBhB,EAAS,QAAQ,SAAWA,EAAS,QAAQ,SAC1CK,EAAcL,EAAS,QAAQ,OAAO,GAI/C,MAAMiB,EAAkD,CACtDjB,EAAS,QACTc,CAAA,EAGFI,OAAAA,EAAA,cAAcD,CAAG,EAEVA,CACT"}