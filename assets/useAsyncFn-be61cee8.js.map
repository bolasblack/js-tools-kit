{"version":3,"file":"useAsyncFn-be61cee8.js","sources":["../../packages/useAsync/src/useAsyncFn.ts"],"sourcesContent":["import { DependencyList, useCallback, useRef, useState, useEffect } from 'react'\nimport {\n  AsyncState$Idle,\n  AsyncState$Loading,\n  AsyncState$Error,\n  AsyncState$Success,\n} from './types'\n\nexport function useAsyncFn<Result = any, Args extends any[] = any[]>(\n  fn: (...args: Args) => Promise<Result>,\n  deps: DependencyList = [],\n  initialState: useAsyncFn.State<Result> = { loading: false },\n): [useAsyncFn.State<Result>, useAsyncFn.AsyncFn<Result, Args>] {\n  const lastCallIdRef = useRef(0)\n  const stateRef = useRef<useAsyncFn.State<Result>>(initialState)\n  const isMounted = useMountedState()\n  const stateChangedTimeRef = useRef(0)\n  const [, rerenderComponent] = useState(0)\n\n  const markStateChanged = useCallback(() => {\n    stateChangedTimeRef.current = Date.now()\n    if (isMounted()) rerenderComponent(Date.now())\n  }, [isMounted])\n\n  const handlePromise = useCallback(\n    async (promise: Promise<Result>) => {\n      const callId = lastCallIdRef.current\n\n      try {\n        const value = await promise\n        const state = { value, loading: false, promise } as const\n        if (callId === lastCallIdRef.current) {\n          stateRef.current = state\n        }\n        markStateChanged()\n        return state\n      } catch (error: any) {\n        const state = { error, loading: false, promise } as const\n        if (callId === lastCallIdRef.current) {\n          stateRef.current = { error: error, loading: false, promise }\n        }\n        markStateChanged()\n        return state\n      }\n    },\n    [markStateChanged],\n  )\n\n  const reRun = useCallback(\n    async (...args: Args) => {\n      ++lastCallIdRef.current\n      const promise = fn(...args)\n      stateRef.current = { loading: true, promise }\n      markStateChanged()\n      return handlePromise(promise)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [...deps, markStateChanged, handlePromise],\n  )\n\n  // handle if state changed when component not mounted\n  useEffect(() => {\n    if (Date.now() >= stateChangedTimeRef.current) {\n      rerenderComponent(Date.now())\n    }\n  }, [])\n\n  // handle if initialState is loading in initialize phase\n  if (\n    // if lastCallId is 0, mean hook is called first time\n    !lastCallIdRef.current\n  ) {\n    ++lastCallIdRef.current\n\n    if (stateRef.current.loading && stateRef.current.promise) {\n      void handlePromise(stateRef.current.promise)\n    }\n  }\n\n  return [stateRef.current, reRun]\n}\n\nexport namespace useAsyncFn {\n  export type State<T> =\n    | AsyncState$Idle\n    | AsyncState$Loading<T>\n    | AsyncState$Success<T>\n    | AsyncState$Error<T>\n\n  export type AsyncFn<Result = any, Args extends any[] = any[]> = (\n    ...args: Args\n  ) => Promise<AsyncState$Success<Result> | AsyncState$Error<Result>>\n}\n\nfunction useMountedState(): () => boolean {\n  const mountedRef = useRef(false)\n  const get = useCallback(() => mountedRef.current, [])\n\n  useEffect(() => {\n    mountedRef.current = true\n\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return get\n}\n"],"names":["useAsyncFn","fn","deps","initialState","lastCallIdRef","useRef","stateRef","isMounted","useMountedState","stateChangedTimeRef","rerenderComponent","useState","markStateChanged","useCallback","handlePromise","promise","callId","state","error","reRun","args","useEffect","mountedRef","get"],"mappings":"wCAQgB,SAAAA,EACdC,EACAC,EAAuB,CAAA,EACvBC,EAAyC,CAAE,QAAS,IACU,CACxD,MAAAC,EAAgBC,SAAO,CAAC,EACxBC,EAAWD,SAAiCF,CAAY,EACxDI,EAAYC,IACZC,EAAsBJ,SAAO,CAAC,EAC9B,EAAGK,CAAiB,EAAIC,WAAS,CAAC,EAElCC,EAAmBC,EAAAA,YAAY,IAAM,CACrBJ,EAAA,QAAU,KAAK,MAC/BF,EAAU,GAAqBG,EAAA,KAAK,KAAK,CAAA,EAC5C,CAACH,CAAS,CAAC,EAERO,EAAgBD,EAAA,YACpB,MAAOE,GAA6B,CAClC,MAAMC,EAASZ,EAAc,QAEzB,GAAA,CAEF,MAAMa,EAAQ,CAAE,MADF,MAAMF,EACG,QAAS,GAAO,QAAAA,CAAQ,EAC3C,OAAAC,IAAWZ,EAAc,UAC3BE,EAAS,QAAUW,GAEJL,IACVK,QACAC,EAAY,CACnB,MAAMD,EAAQ,CAAE,MAAAC,EAAO,QAAS,GAAO,QAAAH,CAAQ,EAC3C,OAAAC,IAAWZ,EAAc,UAC3BE,EAAS,QAAU,CAAE,MAAAY,EAAc,QAAS,GAAO,QAAAH,IAEpCH,IACVK,CACT,CACF,EACA,CAACL,CAAgB,CAAA,EAGbO,EAAQN,EAAA,YACZ,SAAUO,IAAe,CACvB,EAAEhB,EAAc,QACV,MAAAW,EAAUd,EAAG,GAAGmB,CAAI,EAC1B,OAAAd,EAAS,QAAU,CAAE,QAAS,GAAM,QAAAS,CAAQ,EAC3BH,IACVE,EAAcC,CAAO,CAC9B,EAEA,CAAC,GAAGb,EAAMU,EAAkBE,CAAa,CAAA,EAI3CO,OAAAA,EAAAA,UAAU,IAAM,CACV,KAAK,OAASZ,EAAoB,SAClBC,EAAA,KAAK,KAAK,CAEhC,EAAG,CAAE,CAAA,EAKFN,EAAc,UAEf,EAAEA,EAAc,QAEZE,EAAS,QAAQ,SAAWA,EAAS,QAAQ,SAC1CQ,EAAcR,EAAS,QAAQ,OAAO,GAIxC,CAACA,EAAS,QAASa,CAAK,CACjC,CAcA,SAASX,GAAiC,CAClC,MAAAc,EAAajB,SAAO,EAAK,EACzBkB,EAAMV,EAAAA,YAAY,IAAMS,EAAW,QAAS,CAAE,CAAA,EAEpDD,OAAAA,EAAAA,UAAU,KACRC,EAAW,QAAU,GAEd,IAAM,CACXA,EAAW,QAAU,EAAA,GAEtB,CAAE,CAAA,EAEEC,CACT"}