{"version":3,"file":"Portal.stories-9d66cbd5.js","sources":["../../packages/DocumentElement/lib/DocumentElement.esm.js","../../packages/Portal/src/Portal.tsx"],"sourcesContent":["// src/DocumentElement.tsx\nimport withSideEffect from \"react-side-effect\";\nvar _DocumentElementInner = ({\n  children\n}) => children || null;\nfunction mergeClassNames(classNames) {\n  const classNameSet = new Set(classNames.join(\" \").split(\" \"));\n  return Array.from(classNameSet).filter(Boolean).join(\" \");\n}\nfunction reducePropsToState(propsList) {\n  const mergedStyle = Object.assign({}, ...propsList.map((p) => p.style || {}));\n  const classNames = propsList.map((p) => p.className || \"\");\n  return {\n    style: mergedStyle,\n    className: mergeClassNames(classNames)\n  };\n}\nfunction handleStateChangeOnClient(props) {\n  const { documentElement } = document;\n  const { style } = props;\n  documentElement.style.cssText = \"\";\n  if (style) {\n    Object.keys(style).forEach(\n      (k) => documentElement.style.setProperty(k, style[k])\n    );\n  }\n  const nextClassName = props.className || \"\";\n  if (nextClassName !== documentElement.className) {\n    documentElement.className = nextClassName;\n  }\n}\nvar DocumentElement = withSideEffect(\n  reducePropsToState,\n  handleStateChangeOnClient\n)(_DocumentElementInner);\nexport {\n  DocumentElement,\n  _DocumentElementInner\n};\n//# sourceMappingURL=DocumentElement.esm.js.map","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { SimpleJSON } from '@c4605/ts-types'\nimport shallowEqual from 'shallowequal'\n\nexport type OnVisibleChangeCallback = (\n  visible: boolean,\n  reason: { event?: Event },\n) => void\n\nexport interface PortalProps {\n  portalContainerRef?: React.Ref<HTMLElement>\n\n  /**\n   * Specify the element to listen the click-outside event,\n   *\n   * if omitted, use the `document.documentElement`\n   */\n  baseElement?: HTMLElement\n  /**\n   * Specify the parent element for portal,\n   *\n   * * if `null`, render children inline\n   * * if omitted, use the `document.body`\n   */\n  parent?: null | HTMLElement | (() => HTMLElement)\n  /** Children in portal */\n  children?: React.ReactNode\n\n  /** Specify portal class name */\n  className?: string\n  /** Specify portal style */\n  style?: React.CSSProperties & SimpleJSON\n\n  /** The visibility of portal */\n  visible?: boolean\n  /** Will be call when the visibility needs to be changed */\n  onVisibleChange?: OnVisibleChangeCallback\n}\n\nexport class Portal extends React.PureComponent<PortalProps> {\n  static displayName = 'Portal'\n\n  private _portalEl = document.createElement('div')\n\n  componentDidMount(): void {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this.props.baseElement ?? document.documentElement).addEventListener(\n      'click',\n      this._onClickDocument,\n    )\n    this._assignRef(this.props.portalContainerRef, this._portalEl)\n    this._updatePortalEl(this._portalEl, null, this.props)\n  }\n\n  componentDidUpdate(prevProps: PortalProps): void {\n    this._updatePortalEl(this._portalEl, prevProps, this.props)\n  }\n\n  componentWillUnmount(): void {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this.props.baseElement ?? document.documentElement).removeEventListener(\n      'click',\n      this._onClickDocument,\n    )\n    this._updatePortalEl(this._portalEl, this.props, null)\n    this._assignRef(this.props.portalContainerRef, null)\n  }\n\n  render(): React.ReactNode {\n    if (this._getParent(this.props)) {\n      return ReactDOM.createPortal(this.props.children, this._portalEl)\n    }\n\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          ...this._getDisplayStyle(this.props.visible),\n          ...this.props.style,\n        }}\n      >\n        {this.props.children}\n      </div>\n    )\n  }\n\n  private _updatePortalEl(\n    portalEl: HTMLElement,\n    prevProps: PortalProps | null,\n    nextProps: PortalProps,\n  ): void\n  private _updatePortalEl(\n    portalEl: HTMLElement,\n    prevProps: PortalProps,\n    nextProps: PortalProps | null,\n  ): void\n  private _updatePortalEl(\n    portalEl: HTMLElement,\n    prevProps: PortalProps | null,\n    nextProps: PortalProps | null,\n  ): void {\n    if (!prevProps || !nextProps || prevProps.parent !== nextProps.parent) {\n      this._operateParent(prevProps, parent => parent?.removeChild(portalEl))\n      this._operateParent(nextProps, parent => parent?.appendChild(portalEl))\n    }\n\n    if (nextProps) {\n      if (!prevProps || prevProps.className !== nextProps.className) {\n        portalEl.className = nextProps.className?.trim() || ''\n      }\n\n      const prevStyle = (prevProps && prevProps.style) ?? {}\n      const nextStyle = nextProps.style ?? {}\n      if (!shallowEqual(prevStyle, nextStyle)) {\n        portalEl.style.cssText = ''\n        Object.assign(\n          portalEl.style,\n          this._getDisplayStyle(nextProps.visible),\n          nextStyle,\n        )\n        Object.keys(nextStyle)\n          .filter(p => p.startsWith('--'))\n          .forEach(p => {\n            portalEl.style.setProperty(p, nextStyle[p])\n          })\n      } else {\n        if (nextProps.visible) {\n          portalEl.style.removeProperty('display')\n        } else {\n          portalEl.style.display = 'none'\n        }\n      }\n    }\n  }\n\n  private _assignRef(\n    ref: React.Ref<HTMLElement> | undefined,\n    el: HTMLElement | null,\n  ): void {\n    if (ref == null) return\n\n    if (typeof ref === 'function') {\n      ref(el)\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(ref as any).current = el\n    }\n  }\n\n  private _getDisplayStyle(visible: undefined | boolean): {\n    display?: React.CSSProperties['display']\n  } {\n    if (visible) {\n      return {}\n    } else {\n      return { display: 'none' }\n    }\n  }\n\n  private _getParent(props: PortalProps): HTMLElement | null {\n    if (props.parent === undefined) {\n      return document.body\n    } else if (typeof props.parent === 'function') {\n      return props.parent()\n    } else {\n      return props.parent\n    }\n  }\n\n  private _operateParent(\n    props: PortalProps | null,\n    operator: (parent: HTMLElement | null) => void,\n  ): void {\n    if (!props) return\n    operator(this._getParent(props))\n  }\n\n  private _onClickDocument = (event: MouseEvent): void => {\n    /* istanbul ignore next */\n    if (!this.props.visible) return\n    this.props.onVisibleChange?.(false, { event })\n  }\n}\n"],"names":["_DocumentElementInner","children","mergeClassNames","classNames","classNameSet","reducePropsToState","propsList","mergedStyle","p","handleStateChangeOnClient","props","documentElement","style","k","nextClassName","DocumentElement","withSideEffect","_Portal","React.PureComponent","event","_b","_a","prevProps","ReactDOM.createPortal","jsx","portalEl","nextProps","parent","prevStyle","nextStyle","shallowEqual","ref","el","visible","operator","Portal"],"mappings":"qNAEA,IAAIA,EAAwB,CAAC,CAC3B,SAAAC,CACF,IAAMA,GAAY,KAClB,SAASC,EAAgBC,EAAY,CACnC,MAAMC,EAAe,IAAI,IAAID,EAAW,KAAK,GAAG,EAAE,MAAM,GAAG,CAAC,EAC5D,OAAO,MAAM,KAAKC,CAAY,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,CAC1D,CACA,SAASC,EAAmBC,EAAW,CACrC,MAAMC,EAAc,OAAO,OAAO,CAAA,EAAI,GAAGD,EAAU,IAAKE,GAAMA,EAAE,OAAS,CAAA,CAAE,CAAC,EACtEL,EAAaG,EAAU,IAAKE,GAAMA,EAAE,WAAa,EAAE,EACzD,MAAO,CACL,MAAOD,EACP,UAAWL,EAAgBC,CAAU,CACzC,CACA,CACA,SAASM,EAA0BC,EAAO,CACxC,KAAM,CAAE,gBAAAC,CAAiB,EAAG,SACtB,CAAE,MAAAC,CAAO,EAAGF,EAClBC,EAAgB,MAAM,QAAU,GAC5BC,GACF,OAAO,KAAKA,CAAK,EAAE,QAChBC,GAAMF,EAAgB,MAAM,YAAYE,EAAGD,EAAMC,CAAC,CAAC,CAC1D,EAEE,MAAMC,EAAgBJ,EAAM,WAAa,GACrCI,IAAkBH,EAAgB,YACpCA,EAAgB,UAAYG,EAEhC,CACA,IAAIC,EAAkBC,EACpBX,EACAI,CACF,EAAET,CAAqB,ECMhB,MAAAiB,EAAA,MAAAA,UAAAC,EAAAA,aAAA,CAAsD,aAAA,CAAtD,MAAA,GAAA,SAAA,EAGL,KAAA,UAAA,SAAA,cAAA,KAAA,EAuIA,KAAA,iBAAAC,GAAA,SAEE,KAAA,MAAA,WACAC,GAAAC,EAAA,KAAA,OAAA,kBAAA,MAAAD,EAAA,KAAAC,EAAA,GAAA,CAAA,MAAAF,CAAA,GAA6C,CAC/C,CA7IqB,mBAAA,EAMlB,KAAA,MAAA,aAAA,SAAA,iBAAA,iBAAqD,QACpD,KAAA,gBACK,EAEP,KAAA,WAAA,KAAA,MAAA,mBAAA,KAAA,SAAA,EACA,KAAA,gBAAA,KAAA,UAAA,KAAA,KAAA,KAAA,CAAqD,CACvD,mBAAAG,EAAA,CAGE,KAAA,gBAAA,KAAA,UAAAA,EAAA,KAAA,KAAA,CAA0D,CAC5D,sBAAA,EAIG,KAAA,MAAA,aAAA,SAAA,iBAAA,oBAAqD,QACpD,KAAA,gBACK,EAEP,KAAA,gBAAA,KAAA,UAAA,KAAA,MAAA,IAAA,EACA,KAAA,WAAA,KAAA,MAAA,mBAAA,IAAA,CAAmD,CACrD,QAAA,CAGE,OAAA,KAAA,WAAA,KAAA,KAAA,EACEC,EAAAA,aAAA,KAAA,MAAA,SAAA,KAAA,SAAA,EAGFC,EACE,MAAC,CAAA,UAAA,KAAA,MAAA,UACuB,MAAA,CACf,GAAA,KAAA,iBAAA,KAAA,MAAA,OAAA,EACsC,GAAA,KAAA,MAAA,KAC7B,EAChB,SAAA,KAAA,MAAA,QAEY,CAAA,CACd,CAEJ,gBAAAC,EAAAH,EAAAI,EAAA,OAsBE,IALA,CAAAJ,GAAA,CAAAI,GAAAJ,EAAA,SAAAI,EAAA,UACE,KAAA,eAAAJ,EAAAK,GAAAA,GAAA,YAAAA,EAAA,YAAAF,EAAA,EACA,KAAA,eAAAC,EAAAC,GAAAA,GAAA,YAAAA,EAAA,YAAAF,EAAA,GAGFC,EAAA,EACE,CAAAJ,GAAAA,EAAA,YAAAI,EAAA,aACED,EAAA,YAAAJ,EAAAK,EAAA,YAAA,YAAAL,EAAA,SAAA,IAGF,MAAAO,GAAAN,GAAAA,EAAA,QAAA,CAAA,EACAO,EAAAH,EAAA,OAAA,GACAI,EAAAF,EAAAC,CAAA,EAaEH,EAAA,QACED,EAAA,MAAA,eAAA,SAAA,EAEAA,EAAA,MAAA,QAAA,QAfFA,EAAA,MAAA,QAAA,GACA,OAAA,OAAOA,EAAA,MACI,KAAA,iBAAAC,EAAA,OAAA,EAC8BG,CACvC,EAEF,OAAA,KAAAA,CAAA,EAAA,OAAArB,GAAAA,EAAA,WAAA,IAAA,CAAA,EAAA,QAAAA,GAAA,CAGIiB,EAAA,MAAA,YAAAjB,EAAAqB,EAAArB,CAAA,CAAA,CAA0C,CAAA,EAQhD,CACF,CACF,WAAAuB,EAAAC,EAAA,CAMED,GAAA,OAEA,OAAAA,GAAA,WACEA,EAAAC,CAAA,EAGCD,EAAA,QAAAC,EACH,CACF,iBAAAC,EAAA,CAKE,OAAAA,EACE,GAEA,CAAA,QAAA,OACF,CACF,WAAAvB,EAAA,CAGE,OAAAA,EAAA,SAAA,OACE,SAAA,KAAgB,OAAAA,EAAA,QAAA,WAEhBA,EAAA,SAEAA,EAAA,MACF,CACF,eAAAA,EAAAwB,EAAA,CAMExB,GACAwB,EAAA,KAAA,WAAAxB,CAAA,CAAA,CAA+B,CAQnC,EA9IEO,EAAA,YAAA,SADK,IAAAkB,EAAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}