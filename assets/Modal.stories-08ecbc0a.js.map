{"version":3,"file":"Modal.stories-08ecbc0a.js","sources":["../../packages/Modal/src/Modal.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  FC,\n  ReactNode,\n  ReactElement,\n  useMemo,\n  useState,\n  useEffect,\n  Ref,\n} from 'react'\nimport { Portal, OnVisibleChangeCallback } from '@c4605/react-portal'\nimport cssText from './Modal.css'\n\nexport interface ModalProps {\n  /**\n   * The visibility of modal\n   */\n  visible: boolean\n\n  /**\n   * Will be call when the visibility need to be changed\n   */\n  onVisibleChange: OnVisibleChangeCallback\n\n  /**\n   * Backdrop style\n   *\n   * * `\"clickHide\"`: Show backdrop, request change visibility on clicked\n   * * `\"static\"`: Show backdrop, do nothing on clicked\n   * * `false`: Do not show backdrop\n   */\n  backdrop?: 'clickHide' | 'static' | false\n\n  /**\n   * Children in modal body\n   */\n  children?: ReactNode\n\n  /**\n   * Modal portal element class name\n   */\n  portalClassName?: string\n\n  /**\n   * Modal [portal](/portal-readme) ref\n   */\n  portalRef?: Ref<Portal>\n  /**\n   * Modal [portal](/portal-readme)'s container ref\n   */\n  portalContainerRef?: Ref<HTMLElement>\n\n  /**\n   * Specify the parent element of portal\n   */\n  partalParent?: HTMLElement | (() => HTMLElement)\n\n  /**\n   * document.[documentElement](https://developer.mozilla.org/en-US/docs/Web/API/Document/documentElement) class name\n   */\n  documentElementClassName?: string\n\n  /**\n   * document.[documentElement](https://developer.mozilla.org/en-US/docs/Web/API/Document/documentElement) class name when modal visible.\n   *\n   * Use `null` to prevent add class name to documentElement\n   */\n  documentElementClassNameWhenVisible?: string | null\n\n  /**\n   * document.[documentElement](https://developer.mozilla.org/en-US/docs/Web/API/Document/documentElement) class name when modal invisible.\n   *\n   * Use `null` to prevent add class name to documentElement\n   */\n  documentElementClassNameWhenInvisible?: string | null\n\n  /**\n   * Modal backdrop element class name\n   */\n  backdropClassName?: string\n\n  /**\n   * Modal backdrop element ref\n   */\n  backdropRef?: Ref<HTMLDivElement>\n\n  /**\n   * Modal body element class name\n   */\n  bodyClassName?: string\n\n  /**\n   * Modal body element ref\n   */\n  bodyRef?: Ref<HTMLDivElement>\n}\n\nexport const Modal: FC<ModalProps> = function Modal(props) {\n  const { visible, onVisibleChange } = props\n\n  useEffect(() => {\n    const el = document.createElement('style')\n    el.textContent = cssText\n    document.head.appendChild(el)\n    return () => {\n      document.head.removeChild(el)\n    }\n  }, [])\n\n  const {\n    documentElementClassName,\n    documentElementClassNameWhenVisible,\n    documentElementClassNameWhenInvisible,\n  } = props\n  useEffect(() => {\n    const classNames = [documentElementClassName]\n    if (visible && documentElementClassNameWhenVisible) {\n      classNames.push(documentElementClassNameWhenVisible)\n    }\n    if (!visible && documentElementClassNameWhenInvisible) {\n      classNames.push(documentElementClassNameWhenInvisible)\n    }\n    const finalClassNames = classNames.join(' ').split(' ')\n    document.documentElement.classList.add(...finalClassNames)\n    return () => {\n      document.documentElement.classList.remove(...finalClassNames)\n    }\n  }, [\n    visible,\n    documentElementClassName,\n    documentElementClassNameWhenVisible,\n    documentElementClassNameWhenInvisible,\n  ])\n\n  const { backdrop, backdropRef, backdropClassName } = props\n  const backdropElem = useMemo(\n    () =>\n      !backdrop ? null : (\n        <div\n          ref={backdropRef}\n          className={backdropClassName}\n          onClick={(event: React.MouseEvent) => {\n            if (backdrop === 'static') return\n            onVisibleChange?.(false, { event: event.nativeEvent })\n          }}\n        />\n      ),\n    [backdrop, backdropRef, backdropClassName, onVisibleChange],\n  )\n\n  const {\n    portalRef,\n    portalContainerRef,\n    portalClassName,\n    partalParent,\n    bodyRef,\n    bodyClassName,\n    children,\n  } = props\n  const portal = useMemo(\n    () => (\n      <Portal\n        ref={portalRef}\n        portalContainerRef={portalContainerRef}\n        className={portalClassName}\n        visible={visible}\n        parent={partalParent}\n      >\n        {backdropElem}\n        <div ref={bodyRef} className={bodyClassName}>\n          {children}\n        </div>\n      </Portal>\n    ),\n    [\n      portalRef,\n      portalContainerRef,\n      portalClassName,\n      visible,\n      partalParent,\n      backdropElem,\n      bodyRef,\n      bodyClassName,\n      children,\n    ],\n  )\n\n  return portal\n}\n\nModal.defaultProps = {\n  backdrop: 'clickHide',\n  documentElementClassName: 'Modal__html',\n  documentElementClassNameWhenVisible: 'Modal__html--visible',\n  documentElementClassNameWhenInvisible: null,\n  portalClassName: 'Modal',\n  backdropClassName: 'Modal__backdrop',\n  bodyClassName: 'Modal__body',\n}\n\nexport function useModal({\n  onVisibleChange: _,\n  visible: initialVisible = false,\n  children,\n  ...props\n}: Partial<Omit<ModalProps, 'children'>> & {\n  children?: (helpers: useModal.Controller) => ReactNode\n}): useModal.Return {\n  const [visible, setVisible] = useState(initialVisible)\n\n  const ctrl = useMemo(\n    () => ({\n      visible,\n      setVisible,\n      show: () => setVisible(true),\n      hide: () => setVisible(false),\n    }),\n    [visible],\n  )\n\n  const renderedChildren = useMemo(\n    () => typeof children === 'function' && children(ctrl),\n    [children, ctrl],\n  )\n\n  const instance = (\n    <Modal visible={visible} onVisibleChange={setVisible} {...props}>\n      {renderedChildren}\n    </Modal>\n  )\n\n  return [instance, ctrl]\n}\n\nexport namespace useModal {\n  export interface Controller {\n    visible: boolean\n    setVisible: (visible: boolean) => void\n    show: () => void\n    hide: () => void\n  }\n\n  // legacy\n  export type Helpers = Controller\n\n  export type Return = [ReactElement<ModalProps>, Controller]\n}\n"],"names":["Modal","props","visible","onVisibleChange","useEffect","el","cssText","documentElementClassName","documentElementClassNameWhenVisible","documentElementClassNameWhenInvisible","classNames","finalClassNames","backdrop","backdropRef","backdropClassName","backdropElem","useMemo","jsx","event","portalRef","portalContainerRef","portalClassName","partalParent","bodyRef","bodyClassName","children","jsxs","Portal","useModal","_","initialVisible","setVisible","useState","ctrl","renderedChildren"],"mappings":";EAiGOA,EAAA,SAAAC,EAAA,CACL,KAAA,CAAA,QAAAC,EAAA,gBAAAC,CAAA,EAAAF,EAEAG,EAAAA,UAAA,IAAA,CACE,MAAAC,EAAA,SAAA,cAAA,OAAA,EACA,OAAAA,EAAA,YAAAC,EACA,SAAA,KAAA,YAAAD,CAAA,EACA,IAAA,CACE,SAAA,KAAA,YAAAA,CAAA,CAA4B,CAC9B,EAAA,CAAA,CAAA,EAGF,KAAA,CAAM,yBAAAE,EACJ,oCAAAC,EACA,sCAAAC,CACA,EAAAR,EAEFG,EAAAA,UAAA,IAAA,CACE,MAAAM,EAAA,CAAAH,CAAA,EACAL,GAAAM,GACEE,EAAA,KAAAF,CAAA,EAEF,CAAAN,GAAAO,GACEC,EAAA,KAAAD,CAAA,EAEF,MAAAE,EAAAD,EAAA,KAAA,GAAA,EAAA,MAAA,GAAA,EACA,gBAAA,gBAAA,UAAA,IAAA,GAAAC,CAAA,EACA,IAAA,CACE,SAAA,gBAAA,UAAA,OAAA,GAAAA,CAAA,CAA4D,CAC9D,EAAA,CACCT,EACDK,EACAC,EACAC,CACA,CAAA,EAGF,KAAA,CAAA,SAAAG,EAAA,YAAAC,EAAA,kBAAAC,CAAA,EAAAb,EACAc,EAAAC,EAAA,QAAqB,IAAAJ,EAAAK,EAGf,MAAC,CAAA,IAAAJ,EACM,UAAAC,EACM,QAAAI,GAAA,CAETN,IAAA,WACAT,GAAA,MAAAA,EAAA,GAAA,CAAA,MAAAe,EAAA,WAAA,GAAqD,CACvD,CAAA,EATa,KAUf,CAAAN,EAAAC,EAAAC,EAAAX,CAAA,CAEsD,EAG5D,CAAM,UAAAgB,EACJ,mBAAAC,EACA,gBAAAC,EACA,aAAAC,EACA,QAAAC,EACA,cAAAC,EACA,SAAAC,CACA,EAAAxB,EA8BF,OA5BAe,EAAA,QAAe,IAAAU,EAEXC,EAAC,CAAA,IAAAR,EACM,mBAAAC,EACL,UAAAC,EACW,QAAAnB,EACX,OAAAoB,EACQ,SAAA,CAEPP,EAAAE,EAAA,MAAA,CAAA,IAAAM,EAAA,UAAAC,EAAA,SAAAC,EAAA,CAGD,CAAA,CAAA,EACF,CAEFN,EACEC,EACAC,EACAnB,EACAoB,EACAP,EACAQ,EACAC,EACAC,CACA,CACF,CAIJ,EAEAzB,EAAA,aAAA,CAAqB,SAAA,YACT,yBAAA,cACgB,oCAAA,uBACW,sCAAA,KACE,gBAAA,QACtB,kBAAA,kBACE,cAAA,aAErB,EAEO,SAAA4B,EAAA,CAAkB,gBAAAC,EACN,QAAAC,EAAA,GACS,SAAAL,EAC1B,GAAAxB,CAEF,EAAA,CAGE,KAAA,CAAAC,EAAA6B,CAAA,EAAAC,EAAA,SAAAF,CAAA,EAEAG,EAAAjB,EAAA,QAAa,KAAA,CACJ,QAAAd,EACL,WAAA6B,EACA,KAAA,IAAAA,EAAA,EAAA,EAC2B,KAAA,IAAAA,EAAA,EAAA,CACC,GAC9B,CAAA7B,CAAA,CACQ,EAGVgC,EAAAlB,EAAA,QAAyB,IAAA,OAAAS,GAAA,YAAAA,EAAAQ,CAAA,EAC8B,CAAAR,EAAAQ,CAAA,CACtC,EASjB,MAAA,CANAhB,EAAAjB,EAAA,CAAA,QAAAE,EAAA,gBAAA6B,EAAA,GAAA9B,EAAA,SAAAiC,CAAA,CAAA,EAMAD,CAAA,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}